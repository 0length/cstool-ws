
  upstream public {
    # enable sticky session based on IP
    ip_hash;
    server ws:4000;
  }

  upstream debug {
    # enable sticky session based on IP
    ip_hash;
    server ws:4002;
  }


  upstream monitor {
    # enable sticky session based on IP
    ip_hash;
    server ws:4003;
  }

  upstream docs {
    # enable sticky session based on IP
    ip_hash;
    server ws:4004;
  }

server {
  # LOG
  access_log /var/log/nginx/localhost-access.log;
  error_log /var/log/nginx/localhost-error.log;

  server_name localhost;

  location ^~/graphql {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Frame-Options SAMEORIGIN;
    proxy_pass http://public;
  }

  location ^~/graphql/debug {
    proxy_pass http://debug;
  }

  location ^~/graphql/debug/graphql {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Frame-Options SAMEORIGIN;
    proxy_pass http://debug/graphql;
  }

  location ^~/graphql/monitor {
    proxy_pass http://monitor/appmetrics-dash/;

  }

  location ^~/graphql/monitor/socket.io {
    proxy_pass http://monitor/appmetrics-dash/socket.io;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Frame-Options SAMEORIGIN;
  }

  location ^~/graphql/docs {
    proxy_pass http://docs/graphql/docs;
  }

  location / {
    proxy_pass http://public;
    proxy_redirect off;
    # rewrite ^/backend(.*)$ $1 break;

    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_set_header X-Forwarded-For $http_x_forwarded_for,$realip_remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_pass_request_headers on;
    proxy_set_header Client-Ip "";
    proxy_set_header Host $http_host;
  }

  listen 80 default_server;
  listen [::]:80 default_server;
  listen 443 ssl http2 default_server;
  listen [::]:443 ssl http2 default_server;
  
  ssl_certificate     /etc/nginx/certs/localhost+2.pem;
  ssl_certificate_key /etc/nginx/certs/localhost+2-key.pem;

}